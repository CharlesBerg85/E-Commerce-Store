@*we want our products.razor component to be invoked when our application is first loaded*@
@*we can make sure this happens by declaring information about our razor components route at the top of this page*@
@*when a Razor component with an @page directive is compiled the generated component class is provided a root... *@
@*attribute specifying the component's root template. here we are providing a "/", this means when the URL contains...*@
@*only the base URL for our Blazor Component that our ProductsDto Razor component will be invoked*@

@page "/"
@*this declares that the Razor component inherits the ProductsBase*@
@inherits ProductsBase

@if(Products == null)
{
    <h3> Loading products...</h3>
}
else
{
    <h3 class="mb-5">Products</h3>

    var productCount = Products.Count();

    @if(productCount > 0)
    {
        //this link query here will sequentially take four items at a time from the collection of product dto objects
        const int itemsPerRow = 4;
        var productRowList = new List<ProductDto>();

        @for (int i = 0; i < productCount; i++)
        {
            productRowList = Products.Skip(i * itemsPerRow).Take(itemsPerRow).ToList();

            <div class = "row mt-3">
                @foreach(var item in productRowList)
                {
                    <div class="col-md-3 mb-2">
                        <a href="#">
                            <div class="card"> 
                                <img class="img-thumbnail" src="@item.ImageURL">
                                <div class="card-body"> 
                                    <h5 class="card-title mb">
                                        @item.Name
                                    </h5>
                                    <p class="card-text">
                                        <b>@item.Price.ToString("C")</b>  
                                    </p>
                                </div>
                            </div>
                         </a>
                    </div>
                }
            </div>
        }
    }

}